{"version":3,"sources":["../../controller/dist/index.js","../../common/dist/index.js","../../controller/dist/modules/RegisterController/index.js","../../common/dist/yupSchemas/user.js","serviceWorker.ts","apollo.tsx","modules/shared/InputField.tsx","modules/register/ui/RegisterView.tsx","modules/register/RegisterConnector.tsx","routes/index.tsx","index.tsx"],"names":["Object","defineProperty","exports","value","m","p","hasOwnProperty","__export","_taggedTemplateLiteral","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","_createSuper","_inherits","_templateObject","data","React","react_apollo_1","graphql_tag_1","C","_React$PureComponent","_super","_this","this","apply","arguments","submit","_ref","mark","_callee","values","response","wrap","_context","prev","next","console","log","props","mutate","variables","sent","abrupt","stop","_x","key","children","PureComponent","registerMutation","default","RegisterController","graphql","yup","emailNotLongEnough","passwordNotLongEnough","invalidEmail","registerPasswordValidation","string","min","max","required","validUserSchema","object","shape","email","password","Boolean","window","location","hostname","match","client","ApolloClient","link","HttpLink","uri","process","credentials","cache","InMemoryCache","InputField","field","form","touched","errors","errorMsg","name","Item","help","validateStatus","undefined","style","display","width","margin","prefix","type","color","placeholder","component","className","href","htmlType","RegisterView","withFormik","validationSchema","mapPropsToValues","handleSubmit","a","setErrors","RegisterConnector","Routes","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.227dac9a.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./modules/RegisterController\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./yupSchemas/user\"));","\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _regeneratorRuntime = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createSuper = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _inherits = require(\"/Users/mac/work/mobileHomeHub/abb/packages/web/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation RegisterMutation($email: String!, $password: String!){\\n        register(email: $email, password: $password){\\n            path\\n            message\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_apollo_1 = require(\"react-apollo\");\n\nvar graphql_tag_1 = require(\"graphql-tag\");\n\nvar C = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(C, _React$PureComponent);\n\n  var _super = _createSuper(C);\n\n  function C() {\n    var _this;\n\n    _classCallCheck(this, C);\n\n    _this = _super.apply(this, arguments);\n\n    _this.submit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(values);\n                _context.next = 3;\n                return _this.props.mutate({\n                  variables: values\n                });\n\n              case 3:\n                response = _context.sent;\n                console.log('response : ', response);\n                return _context.abrupt(\"return\", null);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(C, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children({\n        submit: this.submit\n      });\n    }\n  }]);\n\n  return C;\n}(React.PureComponent);\n\nvar registerMutation = graphql_tag_1.default(_templateObject());\nexports.RegisterController = react_apollo_1.graphql(registerMutation)(C);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar yup = require(\"yup\");\n\nexports.emailNotLongEnough = \"email must be at least 3 characters\";\nexports.passwordNotLongEnough = \"password must be at least 3 characters\";\nexports.invalidEmail = \"email must be a valid email\";\nexports.registerPasswordValidation = yup.string().min(3, exports.passwordNotLongEnough).max(255).required();\nexports.validUserSchema = yup.object().shape({\n  email: yup.string().min(3, exports.emailNotLongEnough).max(255).email(exports.invalidEmail).required(),\n  password: exports.registerPasswordValidation\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nexport const client = new ApolloClient({\n    link: new HttpLink({\n        uri: process.env.REACT_APP_SERVER_URL,  // \"http://localhost:4000\",\n        credentials: \"include\"\n    }),\n    cache: new InMemoryCache()\n});","import * as React from \"react\";\nimport { FieldProps } from \"formik\";\nimport { Form, Input } from 'antd';\n\n\nexport const InputField: React.SFC<FieldProps<any> & { prefix: React.ReactNode }> = ({\n    field,\n    form: { touched, errors },\n    ...props\n}) => {\n\n    const errorMsg = touched[field.name] && errors[field.name];\n\n    return (\n        <Form.Item \n            help={errorMsg}\n            validateStatus={errorMsg ? \"error\" : undefined } \n        >\n            <Input {...field} {...props} />\n        </Form.Item>\n    );\n};","import * as React from \"react\";\nimport { Form as AntForm, Icon, Button, Checkbox } from 'antd';\nimport { withFormik, FormikErrors, FormikProps, Field, Form } from 'formik';\nimport { validUserSchema } from \"@abb/common\";\nimport { InputField } from \"../../shared/InputField\";\n\ninterface FormValues {\n    email: string;\n    password : string;\n}\ninterface Props {\n    submit: (values: FormValues) => Promise<FormikErrors<FormValues> | null>;\n}\nclass C extends React.PureComponent<FormikProps<FormValues> & Props> {\n    \n    render() {\n       // const { handleSubmit, errors} = this.props;\n       // console.log(errors);\n        return (\n          <Form style={{ display: \"flex\" }}> \n          <div style={{width: 400, margin:'auto'}}>\n          {/* <Form onSubmit={this.handleSubmit} className=\"login-form\"> */}\n            <Field  \n              name=\"email\"\n              prefix={\n                <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} /> as any\n              }\n              placeholder=\"Email\"\n              component={InputField}\n            />\n            <Field  \n              name=\"password\"\n              prefix={\n                <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} /> as any\n              }\n              placeholder=\"Password\"\n              component={InputField}\n            />\n       \n            <AntForm>\n              <Checkbox>Remember me</Checkbox>\n              <a className=\"login-form-forgot\" href=\"\">\n                Forgot password\n              </a>\n            </AntForm>\n            <AntForm>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Register\n              </Button>\n            </AntForm>\n            <AntForm>\n              Or <a href=\"\">Login now!</a>\n            </AntForm>\n            </div>\n          </Form>\n        );\n    }\n}\n\n\n\n\n\nexport const RegisterView = withFormik<Props, FormValues>({\n    validationSchema: validUserSchema,\n    // validateOnChange : false,\n    // validateOnBlur: false,\n    mapPropsToValues: () => ({ email: \"\", password: \"\" }),\n    handleSubmit: async (values, {props, setErrors}) => {\n        const errors = await props.submit(values);\n        if(errors){\n            setErrors(errors)\n        }\n    }\n})(C);","import * as React from \"react\";\nimport {RegisterController} from '@abb/controller';\n\nimport { RegisterView } from \"./ui/RegisterView\";\n\n\n// container -> view\n// container -> connector -> view\n// controller -> connector -> view\n\n\n// export const RegisterConnector = () => <RegisterView/>;\n\nexport class RegisterConnector extends React.PureComponent {\n    // dummySubmit = async (values: any) => {\n    //     console.log(values);\n    //     return null;\n    // };\n\n    render() {\n        return (\n        <RegisterController >\n\n           {({ submit }) => <RegisterView submit={submit} />} \n        </RegisterController>\n  \n        );\n    }\n}","import * as React from \"react\";\nimport {BrowserRouter, Route, Switch  } from 'react-router-dom';\n\nimport { RegisterConnector } from \"../modules/register/RegisterConnector\";\n// import { RegisterView } from \"../modules/register/ui/RegisterView\";\n\nexport const Routes = () => (\n    <BrowserRouter>\n        <Switch>\n        {/* <div> <h1>Hello</h1></div>; */}\n            {/* <Route   path=\"/\" componet={<div><h1 color=\"blue\">Hello</h1></div>} /> */}\n            <Route exact={true} path=\"/register\" component={RegisterConnector} />\n        </Switch>\n    </BrowserRouter>\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n\nimport {ApolloProvider } from 'react-apollo';\n\n// import App from './App'; \nimport * as serviceWorker from './serviceWorker';\nimport { client } from \"./apollo\";\nimport { Routes } from './routes';\nimport \"./index.css\";\n\n// console.log(\"apollo clinet : \", client);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n    <ApolloProvider client={client}>\n        {/* <App /> */}\n        <Routes />\n        {/* <div>\n            <h2>My first Apollo app</h2>\n        </div> */}\n    </ApolloProvider>,\n    document.getElementById(\"root\") as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}