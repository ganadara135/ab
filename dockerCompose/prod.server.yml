version: "3"
services:
    redis:
        image: "redis"
        networks:
            - net-abb
        container_name: redis
        
    rdb:
        image: "postgres:9.6"
        volumes:
            - rdb-data:/var/lib/postgresql/data
        networks:
            - net-abb
        environment: 
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        container_name: rdb

    backend:
        build: 
            context: ../
            dockerfile: ./dockerCompose/Dockerfile.server.prod.compose
            args: 
                - "NODE_ENV=${NODE_ENV}"
        image: ganadara135/abbback:latest
        ports:
            - 4000:4000
        networks:
            - net-abb
        environment:
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@rdb:5432/${POSTGRES_DB}
            - REDIS_HOST=redis
            - NODE_ENV=${NODE_ENV}
            - FRONTEND_HOST=http://http://211.180.114.182
            # - REDIS_IP=redis
            - NODE_ENV=${NODE_ENV}
            - WAIT_HOSTS=rdb:5432
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOSTS_CONNECT_TIMEOUT=30
        command: sh -c "/wait && node dist/index.js"
        depends_on:
            - redis
            - rdb
        container_name: backend
    
    # frontend:
    #     image: ganadara135/abbfront:latest
    #     ports:
    #         - "80:80"
    #     networks:
    #         - net-abb
    #     depends_on:
    #         - backend 
    #     container_name: frontend

volumes:
    rdb-data:
networks:
    net-abb: